# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

jobs:
  build-on-merge:
    if: startsWith(github.event.head_commit.message, 'Merge pull request')
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: |
          npm install --omit=dev --ignore-scripts
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
          echo DATABASE_NAME=${{ secrets.DATABASE_NAME }} >> .env
          echo DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} >> .env
          echo DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} >> .env
          echo MYSQL_HOST=${{ secrets.MYSQL_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo JWT_RESET_SECRET=${{ secrets.JWT_RESET_SECRET }} >> .env
          echo JWT_AlGORITHM=${{ secrets.JWT_AlGORITHM }} >> .env
          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
          echo EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} >> .env
          echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> .env
          echo SENDER_EMAIL=${{ secrets.SENDER_EMAIL }} >> .env
          echo SENDER_NAME=${{ secrets.SENDER_NAME }} >> .env
          echo HASH_SALT=${{ secrets.HASH_SALT }} >> .env
          echo PASWORD_HASH_SALT=${{ secrets.PASWORD_HASH_SALT }} >> .env
          echo INDIAMART_CRM_KEY=${{ secrets.INDIAMART_CRM_KEY }} >> .env
          echo FRONTED_URL=${{ secrets.FRONTED_URL }} >> .env
          echo AWS_ID=${{ secrets.AWS_ID }} >> .env
          echo AWS_SECRET=${{ secrets.AWS_SECRET }} >> .env
          echo AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} >> .env
          echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env
          echo AWS_S3_URL=${{ secrets.AWS_S3_URL }} >> .env
          mkdir -p src/uploads
          pm2 restart 0
